// Mixins para media queries
// El parámetro es el nombre del breakpoint

@mixin hasta($size){
	@if map-has-key($breakpoints,$size){
		@media screen and (max-width: map-get($breakpoints,$size) - 1){
			@content;
		}
	} @else {
		 @media screen and (max-width: $size){
			@content;
		}
	}
}

@mixin desde($size){
	@if map-has-key($breakpoints,$size){
		@media screen and (min-width: map-get($breakpoints,$size)){
			@content;
		}
	} @else {
		 @media screen and (min-width: $size){
			@content;
		}
	}
}

@mixin desde-hasta($desde,$hasta){
	@if map-has-key($breakpoints,$desde) and map-has-key($breakpoints,$hasta){
		@media screen and (min-width: map-get($breakpoints,$desde)) and (max-width: map-get($breakpoints,$hasta) - 1){
			@content;
		}
	} @else if map-has-key($breakpoints,$desde) and not map-has-key($breakpoints,$hasta){
		@media screen and (min-width: map-get($breakpoints,$desde)) and (max-width: $hasta) {
			@content;
		}
	} @else if not map-has-key($breakpoints,$desde) and map-has-key($breakpoints,$hasta) {
		@media screen and (min-width: $desde) and (max-width: map-get($breakpoints,$hasta) - 1){
			@content;
		}
	} @else {
		@media screen and (min-width: $desde) and (max-width: $hasta){
			@content;
		}
	}
}

// Mixins para cuadriculas
// Se aplica contendor de la cuadricula. 
// Los parámetros son el selector de cada item y el número de columnas
// El tercer parámetro (opcional) es la separacion entre columnas (en porcentaje)
@mixin cuadricula($items,$columnas,$separacion:2%){
	// por si el contenedor es un ul
	@if $items == li {
		margin     : 0;
		padding    : 0;
		list-style : none; 

		li {
			margin-left: 0;
		}
	}

	&:before, &:after {
		clear   : both;
		content : " ";
		display : table;
		width   : 100%;
	}

	& > #{$items}, & > .#{$items}{
		float          : left;
		width          : (100% - $separacion * ($columnas - 1)) / $columnas;
		margin-right   : $separacion;
		margin-bottom  : $separacion;
		vertical-align : top;

		&:nth-child(#{$columnas}n){
			margin-right : 0;
			clear        : right;
		}

		&:nth-child(#{$columnas}n+1){
			clear        : left;
		}
	}
}

// Mixin para controlar el padding
// El parámetro es por cuanto se va a multiplicar el padding base.
@mixin padding($numero){
	padding-left: ($caja--separacion / 2) * $numero;
	padding-right: ($caja--separacion / 2) * $numero;
}

// Mixin para roporcion de aspecto, se le pasan tres parámetros
// Horizontal, Vertical y Ancho. Este ultimo es opcional, si no 
// se pasa, se tomará el 100% de ancho por defecto.
@mixin proporcion($h,$v,$width:100%){
	width          : $width;
	height         : 0;
	overflow       : hidden;
	padding-bottom : $width * ($v/$h);
}

// ED MENU

// Mixin menu horizontal básico
@mixin menu-horizontal($fondo,$color,$altura,$separacion,$ancho-submenu){
	display    : table;
	background : $fondo;

	&, ul, li {
		list-style : none;
		margin     : 0;
		padding    : 0;
	}

	li {
		position: relative;

		&:hover {
			background: rgba(#000,.1);
		}
	}

	// Items del menu
	> li {	
		float    : left;

		// Submenu de segundo nivel
		> ul {
			background : darken($fondo,4%);
			top        : 100%;
			left       : 0;

			// Submenu de tercer nivel en adelante
			ul {
				background : darken($fondo,8%);
				top        : 0;
				left       : 100%;
			}
		}

		// Preparar animación de submenus
		li {
			max-height : 0;
			overflow   : hidden;
			transition : all .3s;
		}
	}

	//Mostrar el submenu
	li:hover > ul > li {
		max-height : $altura;
		overflow   : visible;
	}

	// Links del menu
	a {
		color       : $color;
		line-height : $altura;
		display     : block;
		padding     : 0 ($separacion / 2);
	}

	// Segundo y tercer nivel
	ul {
		position : absolute;
		width    : $ancho-submenu;
		z-index  : 50;  // evita que los submenus se oculten
	}
}

// Mixin menu vertical básico
@mixin menu-vertical($fondo,$color,$altura,$ancho,$padding){
	background : $fondo;
	display    : table;
	width      : $ancho;

	&, ul, li {
		list-style : none;
		margin     : 0;
		padding    : 0;
	}

	li {
		position: relative;

		&:hover {
			background: rgba(#000,.15);
		
			> ul > li {
				max-height : $altura;
				overflow   : visible;
			}
		}
	}

	// Submenus
	ul {
		background : darken($fondo,4%);
		position   : absolute;
		top        : 0;
		left       : 100%;
		width      : $ancho;

		li {
			max-height : 0;
			overflow   : hidden;
			transition : all .3s;
		}

		ul {
			background : darken($fondo,8%);
		}
	}

	a {
		color       : $color;
		line-height : $altura;
		display     : block;
		padding     : 0 $padding;
	}
}

// Mixin botón mostrar menu
@mixin mostrar-menu($color,$font-size){
	&:before{
		content      : "";
		cursor       : pointer;
		display      : inline-block;
		width        : $font-size*1.6;
		height       : $font-size;
		margin-right : .5em;
		position     : relative;
		top          : .1em;
		background   : linear-gradient(
	                   $color 25%,
	                   transparent 25%,
	                   transparent 37%,
	                   $color 37%,
	                   $color 62%,
	                   transparent 62%,
	                   transparent 75%,
	                   $color 75%
			          );
	}
}

// Mixin boton cerrar menu
@mixin cerrar-menu($color,$font-size){
	&:before{
		content       : "";
		cursor        : pointer;
		display       : inline-block;
		border-radius : 50%;
		width         : $font-size;
		height        : $font-size;
		background    : linear-gradient(
					    -45deg,
					     transparent 45%,
					     $color 45%,
					     $color 55%,
					     transparent 55%
					     ),
					     linear-gradient(
					     45deg,
					     transparent 45%,
					     $color 45%,
					     $color 55%,
					     transparent 55%
					   );
    }
}